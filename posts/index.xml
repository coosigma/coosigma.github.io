<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My Info and Blog Site</title>
    <link>https://coosigma.github.io/posts/</link>
    <description>Recent content in Posts on My Info and Blog Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Jul 2020 15:19:44 +1200</lastBuildDate>
    
	<atom:link href="https://coosigma.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React Redux Dataflow</title>
      <link>https://coosigma.github.io/posts/react-redux-dataflow/</link>
      <pubDate>Sun, 12 Jul 2020 15:19:44 +1200</pubDate>
      
      <guid>https://coosigma.github.io/posts/react-redux-dataflow/</guid>
      <description>Graph of the structure of React with Redux digraph G { graph [bgcolor=&amp;quot;#eff3ff&amp;quot; compound=true newrank=true] rankdir=TB; node[shape=box] &amp;quot;Index&amp;quot; -&amp;gt; &amp;quot;Router&amp;quot; &amp;quot;Index&amp;quot; -&amp;gt; &amp;quot;State&amp;quot; [lhead=cluster_store] &amp;quot;Router&amp;quot; -&amp;gt; &amp;quot;Route&amp;quot; &amp;quot;Route&amp;quot; -&amp;gt; &amp;quot;Container&amp;quot; &amp;quot;Action&amp;quot; -&amp;gt; &amp;quot;Middleware&amp;quot; [arrowhead=curve] &amp;quot;Reducer&amp;quot; -&amp;gt; &amp;quot;Action&amp;quot; [dir=both arrowhead=vee arrowtail=curve] &amp;quot;Middleware&amp;quot; -&amp;gt; &amp;quot;Action&amp;quot; &amp;quot;Container&amp;quot; -&amp;gt; &amp;quot;Action&amp;quot; subgraph cluster_store { label=&amp;quot;Store&amp;quot; labeljust=&amp;quot;r&amp;quot; node[shape=box] &amp;quot;Reducer&amp;quot; -&amp;gt; &amp;quot;State&amp;quot; [arrowhead=vee] &amp;quot;State&amp;quot; -&amp;gt; &amp;quot;Middleware&amp;quot; [dir=back arrowtail=vee] } subgraph cluster_components { label=&amp;quot;Components&amp;quot; labeljust=&amp;quot;l&amp;quot; labelloc=&amp;quot;b&amp;quot; node[shape=box] &amp;quot;Container&amp;quot; -&amp;gt; &amp;quot;Presentational&amp;quot; // [label=&amp;quot;mapStateToProps\nmapDispathToProps&amp;quot;] &amp;quot;Container&amp;quot; -&amp;gt; &amp;quot;State&amp;quot; [arrowhead=vee] } {rank=same; &amp;quot;Router&amp;quot;, &amp;quot;Reducer&amp;quot;} {rank=same; &amp;quot;Route&amp;quot;, &amp;quot;State&amp;quot;} {rank=same; &amp;quot;Container&amp;quot;, &amp;quot;Middleware&amp;quot;} {rank=same; &amp;quot;Presentational&amp;quot;, &amp;quot;Action&amp;quot;} } Graph descriptions digraph D { graph [bgcolor=&amp;quot;#eff3ff&amp;quot;] node[shape=box] rankdir=LR &amp;quot;S3&amp;quot; -&amp;gt; &amp;quot;O3&amp;quot; [arrowhead=curve label=&amp;quot;S3 triggers(is listened by) O3&amp;quot;] &amp;quot;S2&amp;quot; -&amp;gt; &amp;quot;O2&amp;quot; [arrowhead=vee label=&amp;quot;S2 accesses O2&amp;quot;] &amp;quot;S1=Container&amp;quot; -&amp;gt; &amp;quot;O1=Presentational&amp;quot; [label=&amp;quot;Calls with\nconnect(mapStateToProps,\nmapDispatchToProps)&amp;quot;] &amp;quot;S1.</description>
    </item>
    
    <item>
      <title>Regex in Languages</title>
      <link>https://coosigma.github.io/posts/regex-in-languages/</link>
      <pubDate>Sat, 11 Jul 2020 14:37:50 +1200</pubDate>
      
      <guid>https://coosigma.github.io/posts/regex-in-languages/</guid>
      <description>Perl $foo =~ /$pattern/  Match groups $&amp;amp;, $1, ...  Replace $string =~ s/pattern/replacement/g;  Reference https://perldoc.perl.org/perlre.html
Go import (&amp;quot;regexp&amp;quot;) match, _ := regexp.MatchString(&amp;quot;pattern&amp;quot;, &amp;quot;string&amp;quot;)  Capture var r = regexp.MustCompile(`pattern`) fmt.Println(r.FindStringSubmatch(&amp;quot;string&amp;quot;)) // =&amp;gt; [group0, group1] fmt.Println(r.MatchAllString(&amp;quot;string1, string2&amp;quot;, -1)) // =&amp;gt; [string1, string2]  Replace newString := r.RelaceAllString(&amp;quot;oldString&amp;quot;, &amp;quot;replacement&amp;quot;)  Reference https://golang.org/pkg/regexp/ https://gobyexample.com/regular-expressions
Ruby &#39;string&#39; =~ /pattern/ /pattern/ =~ &#39;string&#39; m = &#39;string&#39;.match(/pattern/)  Match groups m[1]  Replace &#39;string&#39;.</description>
    </item>
    
  </channel>
</rss>